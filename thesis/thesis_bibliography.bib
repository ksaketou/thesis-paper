@inproceedings{10.1145/3283812.3283819,
author = {Gonzalez, Danielle and Prentice, Suzanne and Mirakhorli, Mehdi},
title = {A {F}ine-{G}rained {A}pproach for {A}utomated {C}onversion of {JU}nit {A}ssertions to {E}nglish},
year = {2018},
isbn = {9781450360555},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3283812.3283819},
doi = {10.1145/3283812.3283819},
abstract = {Converting source or unit test code to English has been shown to improve the maintainability, understandability, and analysis of software and tests. Code summarizers identify 'important' statements in the source/tests and convert them to easily understood English sentences using static analysis and NLP techniques. However, current test summarization approaches handle only a subset of the variation and customization allowed in the JUnit assert API (a critical component of test cases) which may affect the accuracy of conversions. In this paper, we present our work towards improving JUnit test summarization with a detailed process for converting a total of 45 unique JUnit assertions to English, including 37 previously-unhandled variations of the assertThat method. This process has also been implemented and released as the AssertConvert tool. Initial evaluations have shown that this tool generates English conversions that accurately represent a wide variety of assertion statements which could be used for code summarization or other NLP analyses.},
booktitle = {Proceedings of the 4th ACM SIGSOFT International Workshop on NLP for Software Engineering},
pages = {14–17},
numpages = {4},
keywords = {JUnit, NLP, Code Summarization, Software Testing},
location = {Lake Buena Vista, FL, USA},
series = {NL4SE 2018}
}
@inproceedings{zhang2014systematic,
  title={A systematic approach to automatically derive test cases from use cases specified in restricted natural languages},
  author={Zhang, Man and Yue, Tao and Ali, Shaukat and Zhang, Huihui and Wu, Ji},
  booktitle={International Conference on System Analysis and Modeling},
  pages={142--157},
  year={2014},
  organization={Springer}
}
@inproceedings{10.1145/3278186.3278194,
author = {Santiago, Dionny and Clarke, Peter J. and Alt, Patrick and King, Tariq M.},
title = {Abstract {F}low {L}earning for {W}eb {A}pplication {T}est {G}eneration},
year = {2018},
isbn = {9781450360531},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3278186.3278194},
abstract = {Achieving high software quality today involves manual analysis, test planning, documentation of testing strategy and test cases, and the development of scripts to support automated regression testing. To keep pace with software evolution, test artifacts must also be frequently updated. Although test automation practices help mitigate the cost of regression testing, a large gap exists between the current paradigm and fully automated software testing. Researchers and practitioners are realizing the potential for artificial intelligence and machine learning (ML) to help bridge the gap between the testing capabilities of humans and those of machines. This paper presents an ML approach that combines a language specification that includes a grammar that can be used to describe test flows, and a trainable test flow generation model, in order to generate tests in a way that is trainable, reusable across different applications, and generalizable to new applications.},
booktitle = {Proceedings of the 9th ACM SIGSOFT International Workshop on Automating TEST Case Design, Selection, and Evaluation},
pages = {49–55},
numpages = {7}
}
@inproceedings{mai2018natural,
  title={A natural language programming approach for requirements-based security testing},
  author={Mai, Xuan Phu and Pastore, Fabrizio and G{\"o}knil, Arda and Briand, Lionel},
  booktitle={29th IEEE International Symposium on Software Reliability Engineering (ISSRE 2018)},
  year={2018},
  organization={IEEE}
}
@inproceedings{soeken2012assisted,
  title={Assisted {B}ehavior {D}riven {D}evelopment using {N}atural {L}anguage {P}rocessing},
  author={Soeken, Mathias and Wille, Robert and Drechsler, Rolf},
  booktitle={International Conference on Modelling Techniques and Tools for Computer Performance Evaluation},
  pages={269--287},
  year={2012},
  organization={Springer}
}
@article{wang2020automatic,
  title={Automatic generation of acceptance test cases from use case specifications: an {NLP}-based approach},
  author={Wang, Chunhui and Pastore, Fabrizio and Goknil, Arda and Briand, Lionel},
  journal={IEEE Transactions on Software Engineering},
  year={2020},
  publisher={IEEE}
}
@phdthesis{rane2017automatic,
  title={Automatic generation of test cases for {A}gile using {N}atural {L}anguage {P}rocessing},
  author={Rane, Prerana Pradeepkumar},
  year={2017},
  school={Virginia Tech}
}
@inproceedings{kamalakar2013automatically,
  title={Automatically {G}enerating {T}ests from {N}atural {L}anguage {D}escriptions of {S}oftware {B}ehavior.},
  author={Kamalakar, Sunil and Edwards, Stephen H and Dao, Tung M},
  booktitle={8th International Conference on Evaluation of Novel Approaches to Software Engineering (ENASE-2013)},
  pages={238--245},
  year={2013}
}
@article{arruda2020automation,
  title={Automation and consistency analysis of test cases written in natural language: {A}n industrial context},
  author={Arruda, Filipe and Barros, Fl{\'a}via and Sampaio, Augusto},
  journal={Science of Computer Programming},
  volume={189},
  pages={102377},
  year={2020},
  publisher={Elsevier}
}
@inproceedings{10.1145/3195538.3195540,
author = {Tahvili, Sahar and Hatvani, Leo and Felderer, Michael and Afzal, Wasif and Saadatmand, Mehrdad and Bohlin, Markus},
title = {Cluster-{B}ased {T}est {S}cheduling {S}trategies {U}sing {S}emantic {R}elationships between {T}est {S}pecifications},
year = {2018},
isbn = {9781450357494},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3195538.3195540},
doi = {10.1145/3195538.3195540},
abstract = {One of the challenging issues in improving the test efficiency is that of achieving a balance between testing goals and testing resources. Test execution scheduling is one way of saving time and budget, where a set of test cases are grouped and tested at the same time. To have an optimal test execution schedule, all related information of a test case (e.g. execution time, functionality to be tested, dependency and similarity with other test cases) need to be analyzed. Test scheduling problem becomes more complicated at high-level testing, such as integration testing and especially in manual testing procedure. Test specifications are generally written in natural text by humans and usually contain ambiguity and uncertainty. Therefore, analyzing a test specification demands a strong learning algorithm. In this position paper, we propose a natural language processing-based approach that, given test specifications at the integration level, allows automatic detection of test cases semantic dependencies. The proposed approach utilizes the Doc2Vec algorithm and converts each test case into a vector in n-dimensional space. These vectors are then grouped using the HDBSCAN clustering algorithm into semantic clusters. Finally, a set of cluster-based test scheduling strategies are proposed for execution. The proposed approach has been applied in a sub-system from the railway domain by analyzing an ongoing testing project at Bombardier Transportation AB, Sweden.},
booktitle = {Proceedings of the 5th International Workshop on Requirements Engineering and Testing},
pages = {1–4},
numpages = {4},
keywords = {NLP, software testing, Doc2Vec, clustering, HDBSCAN, test optimization, dependency},
location = {Gothenburg, Sweden},
series = {RET '18}
}
@inproceedings{10.1145/3368089.3417067,
author = {Li, Linyi and Li, Zhenwen and Zhang, Weijie and Zhou, Jun and Wang, Pengcheng and Wu, Jing and He, Guanghua and Zeng, Xia and Deng, Yuetang and Xie, Tao},
title = {Clustering {T}est {S}teps in {N}atural {L}anguage toward {A}utomating {T}est {A}utomation},
year = {2020},
isbn = {9781450370431},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3368089.3417067},
doi = {10.1145/3368089.3417067},
abstract = {For large industrial applications, system test cases are still often described in natural language (NL), and their number can reach thousands. Test automation is to automatically execute the test cases. Achieving test automation typically requires substantial manual effort for creating executable test scripts from these NL test cases. In particular, given that each NL test case consists of a sequence of NL test steps, testers first implement a test API method for each test step and then write a test script for invoking these test API methods sequentially for test automation. Across different test cases, multiple test steps can share semantic similarities, supposedly mapped to the same API method. However, due to numerous test steps in various NL forms under manual inspection, testers may not realize those semantically similar test steps and thus waste effort to implement duplicate test API methods for them. To address this issue, in this paper, we propose a new approach based on natural language processing to cluster similar NL test steps together such that the test steps in each cluster can be mapped to the same test API method. Our approach includes domain-specific word embedding training along with measurement based on Relaxed Word Mover’sDistance to analyze the similarity of test steps. Our approach also includes a technique to combine hierarchical agglomerative clustering and K-means clustering post-refinement to derive high-quality and manually-adjustable clustering results. The evaluation results of our approach on a large industrial mobile app, WeChat, show that our approach can cluster the test steps with high accuracy, substantially reducing the number of clusters and thus reducing the downstream manual effort. In particular, compared with the baseline approach, our approach achieves 79.8% improvement on cluster quality, reducing 65.9% number of clusters, i.e., the number of test API methods to be implemented.},
booktitle = {Proceedings of the 28th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
pages = {1285–1295},
numpages = {11},
keywords = {natural language processing, software testing, Clustering},
location = {Virtual Event, USA},
series = {ESEC/FSE 2020}
}
@inproceedings{wong2015dase,
  title={{Dase}: {D}ocument-assisted symbolic execution for improving {A}utomated {S}oftware {T}esting},
  author={Wong, Edmund and Zhang, Lei and Wang, Song and Liu, Taiyue and Tan, Lin},
  booktitle={2015 IEEE/ACM 37th IEEE International Conference on Software Engineering},
  volume={1},
  pages={620--631},
  year={2015},
  organization={IEEE}
}
@inproceedings{reqclass,
author = {Sainani, Abhishek and Rose, Preethu and Joshi, Vivek and Ghaisas, Smita},
booktitle = {2020 IEEE 28th International Requirements Engineering Conference (RE)},
year = {2020},
month = {08},
pages = {147-157},
title = {Extracting and {C}lassifying {R}equirements from {S}oftware {E}ngineering {C}ontracts},
doi = {10.1109/RE48521.2020.00026}
}
@incollection{mueller2010generation,
  title={Generation of executable testbenches from {N}atural {L}anguage requirement specifications for embedded real-time systems},
  author={Mueller, Wolfgang and Bol, Alexander and Krupp, Alexander and Lundkvist, Ola},
  booktitle={Distributed, Parallel and Biologically Inspired Systems},
  pages={78--89},
  year={2010},
  publisher={Springer}
}
@inproceedings{masuda2016syntactic,
  title={Syntactic rules of extracting test cases from software requirements},
  author={Masuda, Satoshi and Matsuodani, Tohru and Tsuda, Kazuhiko},
  booktitle={Proceedings of the 2016 8th International Conference on Information Management and Engineering},
  pages={12--17},
  year={2016}
}
@article{carvalho2014nat2testscr,
  title={{NAT2TESTSCR}: {T}est case generation from natural language requirements based on {SCR} specifications},
  author={Carvalho, Gustavo and Falcao, Diogo and Barros, Fl{\'a}via and Sampaio, Augusto and Mota, Alexandre and Motta, Leonardo and Blackburn, Mark},
  journal={Science of Computer Programming},
  volume={95},
  pages={275--297},
  year={2014},
  publisher={Elsevier}
}
@inproceedings{chen2021test,
  title={Test {C}ase {R}euse based on {ESIM} {M}odel},
  author={Chen, Xiaomeng and Wang, Jinbo and Zhou, Shan and Xue, Panpan and Jia, Jiao},
  booktitle={2021 8th International Conference on Dependable Systems and Their Applications (DSA)},
  pages={700--705},
  year={2021},
  organization={IEEE}
}
@inproceedings{pedemonte2012towards,
  title={Towards automatic functional test execution},
  author={Pedemonte, Pablo and Mahmud, Jalal and Lau, Tessa},
  booktitle={Proceedings of the 2012 ACM international conference on Intelligent User Interfaces},
  pages={227--236},
  year={2012}
}
@inproceedings{litmus,
author = {Dwarakanath, Anurag and Sengupta, Shubhashis},
year = {2012},
booktitle = {17th International conference on Applications of Natural Language Processing and Information Systems},
month = {06},
pages = {58-69},
title = {Litmus: {G}eneration of {T}est {C}ases from {F}unctional {R}equirements in {N}atural {L}anguage},
isbn = {978-3-642-31177-2},
doi = {10.1007/978-3-642-31178-9_6}
}
@article{garousi2020nlp,
  title={{NLP}-assisted software testing: {A} systematic mapping of the literature},
  author={Garousi, Vahid and Bauer, Sara and Felderer, Michael},
  journal={Information and Software Technology},
  volume={126},
  pages={106321},
  year={2020},
  publisher={Elsevier}
}
@inproceedings{inproceedings,
author = {Gröpler, Robin and Sudhi, Viju and José, Emilio and García, Calleja and Bergmann, Andre},
year = {2021},
booktitle = {29th International Workshop on Concurrency, Specification and Programming (CS\&P'21)At: Berlin, Germany},
month = {09},
pages = {},
title = {{NLP}-{B}ased {R}equirements {F}ormalization for {A}utomatic {T}est {C}ase {G}eneration}
}
@inproceedings{9609160,
  author={Kirinuki, Hiroyuki and Matsumoto, Shinsuke and Higo, Yoshiki and Kusumoto, Shinji},
  booktitle={2021 IEEE International Conference on Software Maintenance and Evolution (ICSME)}, 
  title={{NLP}-assisted {W}eb {E}lement {I}dentification {T}oward {S}cript-free {T}esting}, 
  year={2021},
  volume={},
  number={},
  pages={639-643},
  doi={10.1109/ICSME52107.2021.00072}
}
@INPROCEEDINGS{9491761,
  author={Lafi, Mohammed and Alrawashed, Thamer and Hammad, Ahmad Munir},
  booktitle={2021 International Conference on Information Technology (ICIT)}, 
  title={Automated {T}est {C}ases {G}eneration {F}rom {R}equirements {S}pecification}, 
  year={2021},
  volume={},
  number={},
  pages={852-857},
  doi={10.1109/ICIT52682.2021.9491761}
}
@INPROCEEDINGS{7972390,
  author={Ansari, Ahlam and Shagufta, Mirza Baig and Sadaf Fatima, Ansari and Tehreem, Shaikh},
  booktitle={2017 Third International Conference on Advances in Electrical, Electronics, Information, Communication and Bio-Informatics (AEEICB)}, 
  title={Constructing {T}est cases using {N}atural {L}anguage {P}rocessing}, 
  year={2017},
  volume={},
  number={},
  pages={95-99},
  doi={10.1109/AEEICB.2017.7972390}
}
@INPROCEEDINGS{9197868,
  author={Rajaraman, R and Kapur, P K and Kumar, Deepak},
  booktitle={2020 8th International Conference on Reliability, Infocom Technologies and Optimization (Trends and Future Directions) (ICRITO)}, 
  title={Determining {S}oftware {I}nter-{D}ependency {P}atterns for {I}ntegration {T}esting by applying {M}achine learning on {L}ogs and {T}elemetry data}, 
  year={2020},
  volume={},
  number={},
  pages={1080-1084},
  doi={10.1109/ICRITO48877.2020.9197868}
}
@INPROCEEDINGS{8051381,
  author={Tahvili, Sahar and Saadatmand, Mehrdad and Bohlin, Markus and Afzal, Wasif and Ameerjan, Sharvathul Hasan},
  booktitle={2017 43rd Euromicro Conference on Software Engineering and Advanced Applications (SEAA)}, 
  title={Towards {E}xecution {T}ime {P}rediction for {M}anual {T}est {C}ases from {T}est {S}pecification}, 
  year={2017},
  volume={},
  number={},
  pages={421-425},
  doi={10.1109/SEAA.2017.10}
}
@ARTICLE{9617598,
  author={Yang, Yuxuan and Chen, Xin},
  journal={IEEE Access}, 
  title={Crowdsourced {T}est {R}eport {P}rioritization {B}ased on {T}ext {C}lassification}, 
  year={2021},
  volume={},
  number={},
  pages={1-1},
  doi={10.1109/ACCESS.2021.3128726}
}
@inproceedings{ambriola1997processing,
  title={Processing {N}atural {L}anguage {R}equirements},
  author={Ambriola, Vincenzo and Gervasi, Vincenzo},
  booktitle={Proceedings 12th IEEE International Conference Automated Software Engineering},
  pages={36--45},
  year={1997},
  organization={IEEE}
}
@inproceedings{harmain2000cm,
  title={{CM-B}uilder: an automated {NL}-based {CASE} tool},
  author={Harmain, Harmain Mohamed and Gaizauskas, R},
  booktitle={Proceedings ASE 2000. Fifteenth IEEE International Conference on Automated Software Engineering},
  pages={45--53},
  year={2000},
  organization={IEEE}
}
@article{femmer2017rapid,
  title={Rapid {Q}uality {A}ssurance with {R}equirements {S}mells},
  author={Femmer, Henning and Fern{\'a}ndez, Daniel M{\'e}ndez and Wagner, Stefan and Eder, Sebastian},
  journal={Journal of Systems and Software},
  volume={123},
  pages={190--213},
  year={2017},
  publisher={Elsevier}
}
@inproceedings{sinha2009linguistic,
  title={A linguistic analysis engine for natural language use case description and its application to dependability analysis in industrial use cases},
  author={Sinha, Avik and Paradkar, Amit and Kumanan, Palani and Boguraev, Branimir},
  booktitle={2009 IEEE/IFIP International Conference on Dependable Systems \& Networks},
  pages={327--336},
  year={2009},
  organization={IEEE}
}
@inproceedings{allala2019towards,
  title={Towards transforming user requirements to test cases using {MDE} and {NLP}},
  author={Allala, Sai Chaithra and Sotomayor, Juan P and Santiago, Dionny and King, Tariq M and Clarke, Peter J},
  booktitle={2019 IEEE 43rd Annual Computer Software and Applications Conference (COMPSAC)},
  volume={2},
  pages={350--355},
  year={2019},
  organization={IEEE}
}
@inproceedings{viggiato2022using,
  title={Using {N}atural {L}anguage {P}rocessing techniques to improve manual test case descriptions},
  author={Viggiato, Markos and Paas, Dale and Buzon, Chris and Bezemer, Cor-Paul},
  booktitle={International Conference on Software Engineering-Software Engineering in Practice (ICSE-SEIP)},
  year={2022}
}
@article{srinivas2021review,
  title={A review on {T}est {A}utomation for test cases generation using {NLP} techniques},
  author={Srinivas Perala, Dr and Roy, Ajay},
  journal={Turkish Journal of Computer and Mathematics Education (TURCOMAT)},
  volume={12},
  number={6},
  pages={1488--1491},
  year={2021}
}
@book{swebok,
  title={The guide to the {S}oftware {E}ngineering {B}ody {O}f {K}nowledge v3.0},
  author={Bourque, Pierre and Dupuis, Robert and Abran, Alain and Moore, James W and Tripp, Leonard},
  journal={IEEE software},
  pages={335},
  year={2014},
  publisher={IEEE}
}
@article{testautomation,
  title={Test {A}utomation: not just for test execution},
  author={Garousi, Vahid and Elberzhager, Frank},
  journal={IEEE Software},
  volume={34},
  number={2},
  pages={90--96},
  year={2017},
  publisher={IEEE}
}
@inproceedings{introautotesting,
  title={Introducing automated {GUI} testing and observing its benefits: an industrial case study in the context of law-practice management software},
  author={Garousi, Vahid and Yildirim, Erdem},
  booktitle={2018 IEEE International Conference on Software Testing, Verification and Validation Workshops (ICSTW)},
  pages={138--145},
  year={2018},
  organization={IEEE}
}
@article{escalona2011overview,
  title={An overview on test generation from functional requirements},
  author={Escalona, Mar{\'\i}a Jos{\'e} and Gutierrez, Javier J and Mej{\'\i}as, Manuel and Arag{\'o}n, Gustavo and Ramos, Isabel and Torres, Jes{\'u}s and Dom{\'\i}nguez, Francisco Jos{\'e}},
  journal={Journal of Systems and Software},
  volume={84},
  number={8},
  pages={1379--1393},
  year={2011},
  publisher={Elsevier}
}
@inproceedings{ahsan2017comprehensive,
  title={A comprehensive investigation of natural language processing techniques and tools to generate automated test cases},
  author={Ahsan, Imran and Butt, Wasi Haider and Ahmed, Mudassar Adeel and Anwar, Muhammad Waseem},
  booktitle={Proceedings of the Second International Conference on Internet of things, Data and Cloud Computing},
  pages={1--10},
  year={2017}
}
@article{battina2019artificial,
  title={Artificial {I}ntelligence in {S}oftware {T}est {A}utomation: {A} {S}ystematic {L}iterature {R}eview},
  author={Battina, Dhaya Sindhu},
  journal={International Journal of Emerging Technologies and Innovative Research (www. jetir. org| UGC and issn Approved), ISSN},
  pages={2349--5162},
  year={2019}
}
@book{bddbook,
  title={{BDD} in {A}ction: {B}ehavior-driven development for the whole software lifecycle},
  author={Smart, John},
  year={2014},
  publisher={Simon and Schuster}
}
@misc{pageobject,
author = {Selenium Contributors},
title = {Page {O}bject {M}odels},
editor =  {Selenium Wiki},
month = {January},
year = {2022},
url =   {https://www.selenium.dev/documentation/test_practices/encouraged/page_object_models/},
}
@inproceedings{anwar2020natural,
  title={A {N}atural {L}anguage {P}rocessing ({NLP}) framework for embedded systems to automatically extract verification aspects from textual design requirements},
  author={Anwar, Muhammad Waseem and Ahsan, Imran and Azam, Farooque and Butt, Wasi Haider and Rashid, Muhammad},
  booktitle={Proceedings of the 2020 12th International Conference on Computer and Automation Engineering},
  pages={7--12},
  year={2020}
}
@INPROCEEDINGS{8811987,
  author={Hao, Rui and Feng, Yang and Jones, James A. and Li, Yuying and Chen, Zhenyu},
  booktitle={2019 IEEE/ACM 41st International Conference on Software Engineering (ICSE)}, 
  title={{CTRAS}: {C}rowdsourced {T}est {R}eport {A}ggregation and {S}ummarization}, 
  year={2019},
  volume={},
  number={},
  pages={900-911},
  doi={10.1109/ICSE.2019.00096}
}
@INPROCEEDINGS{8812113,
  author={Amar, Anunay and Rigby, Peter C.},
  booktitle={2019 IEEE/ACM 41st International Conference on Software Engineering (ICSE)}, 
  title={Mining {H}istorical {T}est {L}ogs to {P}redict {B}ugs and {L}ocalize {F}aults in the {T}est {L}ogs}, 
  year={2019},
  volume={},
  number={},
  pages={140-151},
  doi={10.1109/ICSE.2019.00031}
}
@INPROCEEDINGS{8812070,
  author={Motwani, Manish and Brun, Yuriy},
  booktitle={2019 IEEE/ACM 41st International Conference on Software Engineering (ICSE)}, 
  title={Automatically {G}enerating {P}recise {O}racles from {S}tructured {N}atural {L}anguage {S}pecifications}, 
  year={2019},
  volume={},
  number={},
  pages={188-199},
  doi={10.1109/ICSE.2019.00035}
}
@INPROCEEDINGS{9283916,
  author={Watson, Cody and Tufano, Michele and Moran, Kevin and Bavota, Gabriele and Poshyvanyk, Denys},
  booktitle={2020 IEEE/ACM 42nd International Conference on Software Engineering (ICSE)}, 
  title={On {L}earning {M}eaningful {A}ssert {S}tatements for {U}nit {T}est {C}ases}, 
  year={2020},
  volume={},
  number={},
  pages={1398-1409}
}
@book{artoftesting,
  title={The {A}rt of {S}oftware {T}esting},
  author={Myers, Glenford J and Sandler, Corey and Badgett, Tom},
  year={2011},
  publisher={John Wiley \& Sons}
}
@article{nlpbackround,
  title={Natural {L}anguage {P}rocessing},
  author={Chowdhary, KR1442},
  journal={Fundamentals of artificial intelligence},
  pages={603--649},
  year={2020},
  publisher={Springer}
}
@article{liddy2001natural,
  title={Natural {L}anguage {P}rocessing},
  author={Liddy, Elizabeth D},
  journal = {In Encyclopedia of Library and Information Science, 2nd Ed. NY. Marcel Decker, Inc. },
  year={2001}
}
@article{infoextraction,
author = {Sarawagi, Sunita},
title = {Information {E}xtraction},
year = {2008},
issue_date = {March 2008},
publisher = {Now Publishers Inc.},
address = {Hanover, MA, USA},
volume = {1},
number = {3},
issn = {1931-7883},
url = {https://doi.org/10.1561/1900000003},
doi = {10.1561/1900000003},
journal = {Found. Trends Databases},
month = {mar},
pages = {261–377},
numpages = {117}
}
@INPROCEEDINGS{reqeng1,
  author={Dalpiaz, Fabiano and Brinkkemper, Sjaak},
  booktitle={2021 IEEE 29th International Requirements Engineering Conference (RE)}, 
  title={Agile Requirements Engineering: From User Stories to Software Architectures}, 
  year={2021},
  volume={},
  number={},
  pages={504-505},
  doi={10.1109/RE51729.2021.00076}
  }
  @INPROCEEDINGS{8701252,
  author={Sharma, Sarika and Kumar, Deepak},
  booktitle={2019 Amity International Conference on Artificial Intelligence (AICAI)}, 
  title={Agile Release Planning Using Natural Language Processing Algorithm}, 
  year={2019},
  volume={},
  number={},
  pages={934-938},
  doi={10.1109/AICAI.2019.8701252}
  }
  @inproceedings{preeti2017building,
  title={Building combinatorial test input model from use case artefacts},
  author={Preeti, S and Milind, B and Narayan, Medhini S and Rangarajan, Krishnan},
  booktitle={2017 IEEE International Conference on Software Testing, Verification and Validation Workshops (ICSTW)},
  pages={220--228},
  year={2017},
  organization={IEEE}
}
@inproceedings{nogueira2015automatic,
  title={Automatic generation of test cases and test purposes from natural language},
  author={Nogueira, Sidney and Araujo, Hugo LS and Araujo, Renata and Iyoda, Juliano and Sampaio, Augusto},
  booktitle={Brazilian Symposium on Formal Methods},
  pages={145--161},
  year={2015},
  organization={Springer}
}
@book{fowler2018refactoring,
  title={Refactoring: improving the design of existing code},
  author={Fowler, Martin},
  year={2018},
  publisher={Addison-Wesley Professional}
}
@article{kamalrudin2017maramaaic,
  title={MaramaAIC: tool support for consistency management and validation of requirements},
  author={Kamalrudin, Massila and Hosking, John and Grundy, John},
  journal={Automated software engineering},
  volume={24},
  number={1},
  pages={1--45},
  year={2017},
  publisher={Springer}
}
@incollection{mulla2020potent,
  title={The potent combo of software testing and NLP},
  author={Mulla, Nilofar and Jayakumar, Naveenkumar},
  booktitle={ICDSMLA 2019},
  pages={1623--1632},
  year={2020},
  publisher={Springer}
}
@inproceedings{leung1990study,
  title={A study of integration testing and software regression at the integration level},
  author={Leung, Hareton KN and White, Lee},
  booktitle={Proceedings. Conference on Software Maintenance 1990},
  pages={290--301},
  year={1990},
  organization={IEEE}
}
@inproceedings{cui2017should,
  title={Who should be selected to perform a task in crowdsourced testing?},
  author={Cui, Qiang and Wang, Junjie and Yang, Guowei and Xie, Miao and Wang, Qing and Li, Mingshu},
  booktitle={2017 IEEE 41st Annual Computer Software and Applications Conference (COMPSAC)},
  volume={1},
  pages={75--84},
  year={2017},
  organization={IEEE}
}
@book{bergeron2006verification,
  title={Verification methodology manual for SystemVerilog},
  author={Bergeron, Janick and Cerny, Eduard and Hunter, Alan and Nightingale, Andrew},
  volume={1},
  year={2006},
  publisher={Springer}
}
@article{khurana2017natural,
  title={Natural {L}language {P}rocessing: {S}tate of the art, current trends and challenges},
  author={Khurana, Diksha and Koli, Aditya and Khatter, Kiran and Singh, Sukhdev},
  journal={arXiv preprint arXiv:1708.05148},
  year={2017}
}
@INPROCEEDINGS{6693114,
  author={Ghaisas, Smita and Motwani, Manish and Anish, Preethu Rose},
  booktitle={2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)}, 
  title={Detecting system use cases and validations from documents}, 
  year={2013},
  volume={},
  number={},
  pages={568-573},
  doi={10.1109/ASE.2013.6693114}
}
@INPROCEEDINGS{9240680,
  author={Osama, Mohamed and Zaki-Ismail, Aya and Abdelrazek, Mohamed and Grundy, John and Ibrahim, Amani},
  booktitle={2020 IEEE International Conference on Software Maintenance and Evolution (ICSME)}, 
  title={Score-{B}ased {A}utomatic {D}etection and {R}esolution of {S}yntactic {A}mbiguity in {N}atural {L}anguage {R}equirements}, 
  year={2020},
  volume={},
  number={},
  pages={651-661},
  doi={10.1109/ICSME46990.2020.00067}
}
@incollection{ramshaw1999text,
  title={Text chunking using transformation-based learning},
  author={Ramshaw, Lance A and Marcus, Mitchell P},
  booktitle={Natural language processing using very large corpora},
  pages={157--176},
  year={1999},
  publisher={Springer}
}
@inproceedings{ford2004parsing,
  title={Parsing expression grammars: a recognition-based syntactic foundation},
  author={Ford, Bryan},
  booktitle={Proceedings of the 31st ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
  pages={111--122},
  year={2004}
}
@article{hobbs1997extracting,
  title={Extracting {I}nformation from {N}atural-{L}anguage {T}ext},
  author={Hobbs, Jerry R and Appelt, Douglas and Bear, John and Israel, David and Kameyama, Megumi and Stickel, Mark and Tyson, Mabry},
  journal={Finite-state language processing},
  pages={383},
  year={1997},
  publisher={MIT Press}
}
@article{mikolov2013distributed,
  title={Distributed representations of words and phrases and their compositionality},
  author={Mikolov, Tomas and Sutskever, Ilya and Chen, Kai and Corrado, Greg S and Dean, Jeff},
  journal={Advances in neural information processing systems},
  volume={26},
  year={2013}
}
@article{mikolov2013efficient,
  title={Efficient estimation of word representations in vector space},
  author={Mikolov, Tomas and Chen, Kai and Corrado, Greg and Dean, Jeffrey},
  journal={arXiv preprint arXiv:1301.3781},
  year={2013}
}
@article{10.5555/203987.203989,
author = {Lappin, Shalom and Leass, Herbert J.},
title = {An {A}lgorithm for {P}ronominal {A}naphora {R}esolution},
year = {1994},
issue_date = {December 1994},
publisher = {MIT Press},
address = {Cambridge, MA, USA},
volume = {20},
number = {4},
issn = {0891-2017},
abstract = {This paper presents an algorithm for identifying the noun phrase antecedents of third person pronouns and lexical anaphors (reflexives and reciprocals). The algorithm applies to the syntactic representations generated by McCord's Slot Grammar parser and relies on salience measures derived from syntactic structure and a simple dynamic model of attentional state. Like the parser, the algorithm is implemented in Prolog. The authors have tested it extensively on computer manual texts and conducted a blind test on manual text containing 360 pronoun occurrences. The algorithm successfully identifies the antecedent of the pronoun for 86% of these pronoun occurrences. The relative contributions of the algorithm's components to its overall success rate in this blind test are examined. Experiments were conducted with an enhancement of the algorithm that contributes statistically modelled information concerning semantic and real-world relations to the algorithm's decision procedure. Interestingly, this enhancement only marginally improves the algorithm's performance (by 2%). The algorithm is compared with other approaches to anaphora resolution that have been proposed in the literature. In particular, the search procedure of Hobbs' algorithm was implemented in the Slot Grammar framework and applied to the sentences in teh blind test set. The authors' algorithm achieves a higher rate of success (4%) than Hobbs' algorithm. The relation of the algorithm to the centering approach is discussed, as well as to models of anaphora resolution that invoke a variety of informational factors in ranking antecedent candidates.},
journal = {Comput. Linguist.},
month = {dec},
pages = {535–561},
numpages = {27}
}
@inproceedings{kennedy1996anaphora,
  title={Anaphora for everyone: {P}ronominal anaphora resolution without a parser},
  author={Kennedy, Christopher and Boguraev, Branimir},
  booktitle={COLING 1996 Volume 1: The 16th International Conference on Computational Linguistics},
  year={1996}
}
@article{salton1988term,
  title={Term-weighting approaches in automatic text retrieval},
  author={Salton, Gerard and Buckley, Christopher},
  journal={Information processing \& management},
  volume={24},
  number={5},
  pages={513--523},
  year={1988},
  publisher={Elsevier}
}
@InProceedings{pmlr-v37-kusnerb15,
  title = {From {W}ord {E}mbeddings {T}o {D}ocument {D}istances},
  author = {Kusner, Matt and Sun, Yu and Kolkin, Nicholas and Weinberger, Kilian},
  booktitle = {Proceedings of the 32nd International Conference on Machine Learning},
  pages = {957--966},
  year = {2015},
  editor = {Bach, Francis and Blei, David},
  volume = {37},
  series = {Proceedings of Machine Learning Research},
  address = {Lille, France},
  month = {07--09 Jul},
  publisher =  {PMLR},
  pdf = {http://proceedings.mlr.press/v37/kusnerb15.pdf},
  url = {https://proceedings.mlr.press/v37/kusnerb15.html},
  abstract = {We present the Word Mover’s Distance (WMD), a novel distance function between text documents. Our work is based on recent results in word embeddings that learn semantically meaningful representations for words from local co-occurrences in sentences. The WMD distance measures the dissimilarity between two text documents as the minimum amount of distance that the embedded words of one document need to "travel" to reach the embedded words of another document. We show that this distance metric can be cast as an instance of the Earth Mover’s Distance, a well studied transportation problem for which several highly efficient solvers have been developed. Our metric has no hyperparameters and is straight-forward to implement. Further, we demonstrate on eight real world document classification data sets, in comparison with seven state-of-the-art baselines, that the WMD metric leads to unprecedented low k-nearest neighbor document classification error rates.}
}
@inproceedings{gatt2009simplenlg,
  title={Simple{NLG}: {A} realisation engine for practical applications},
  author={Gatt, Albert and Reiter, Ehud},
  booktitle={Proceedings of the 12th European Workshop on Natural Language Generation (ENLG 2009)},
  pages={90--93},
  year={2009}
}
@article{li2022towards,
  title={Towards the identification of bug entities and relations in bug reports},
  author={Li, Bin and Wei, Ying and Sun, Xiaobing and Bo, Lili and Chen, Dingshan and Tao, Chuanqi},
  journal={Automated Software Engineering},
  volume={29},
  number={1},
  pages={1--31},
  year={2022},
  publisher={Springer}
}
